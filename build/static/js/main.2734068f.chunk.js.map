{"version":3,"sources":["icons/icon256.png","components/firebase/context.js","components/firebase/config.js","components/firebase/index.js","components/firebase/firebase.js","components/SignUp.jsx","components/LogIn.jsx","components/BlockCategories.jsx","components/ForgotPassword.jsx","components/Welcome.jsx","components/AddFriend.jsx","components/Friends.jsx","components/FriendRequests.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","FirebaseContext","React","createContext","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","Firebase","_this","this","Object","classCallCheck","onAuthUserListener","next","fallback","auth","onAuthStateChanged","authUser","user","uid","get","then","snapshot","dbUser","data","roles","objectSpread","email","username","emailVerified","providerData","doCreateUserWithEmailAndPassword","password","createUserWithEmailAndPassword","doSignInWithEmailAndPassword","signInWithEmailAndPassword","doSignInWithGoogle","signInWithPopup","googleProvider","doSignOut","signOut","doPasswordReset","sendPasswordResetEmail","doPasswordUpdate","currentUser","updatePassword","doSendEmailVerification","sendEmailVerification","db","doc","concat","users","collection","app","initializeApp","fieldValue","firestore","FieldValue","GoogleAuthProvider","INITIAL_STATE","retypePassword","error","SignUp","state","handleOnChange","event","setState","defineProperty","target","name","value","onSubmit","firebase","console","log","_this$state","set","merge","message","catch","preventDefault","_this2","_this$state2","isInvalid","react_default","a","createElement","context","Consumer","className","src","catIcon","Input","placeholder","onChange","type","Button","disabled","color","onClick","props","changePage","Component","LogIn","changeAuth","BlockCategories","selectAllChecked","blockedCategories","userId","isLoading","handleSavePreferences","elements","document","getElementsByClassName","checkedItems","catArray","i","length","checked","push","undefined","id","chrome","tabs","query","active","currentWindow","sendMessage","todo","categories","localStorage","setItem","JSON","stringify","handleSelectAll","buttonSetting","onSnapshot","getCategories","_this3","Fragment","Spinner_default","animation","size","variant","role","ForgotPassword","resetEmailSent","Welcome","purpose","savedPurpose","handleSignOut","signout","handlePurpose","e","handlePurposeSubmission","fetchUserDetails","setUsername","blockedCategoriesUser","style","width","height","AddFriend","friendsList","friendEmail","friendId","friendPendingRequests","requestsSent","requestsReceived","handleAddFriend","alreadyFriend","filter","friend","alreadyRequestReceived","request","alreadyRequestSent","where","querySnapshot","docs","forEach","myself","toConsumableArray","requests_sent","requests_received","friendsPendingRequests","handleFriendEmail","friends","Form","FormGroup","Friends","handleRemoveFriend","foe","foeFriendsList","renderFriendsList","map","display","flex","handleHelpFriend","Close_default","FriendRequests","acceptReceivedRequest","fetchRequestsSentData","temp","rejectReceivedRequest","renderRequestsReceived","Check_default","cancelSentRequest","fetchRequestsreceivedData","renderRequestsSent","App","page","getItem","parse","backFor","handleUsername","handlePages","pageTitle","handleAuthUser","handleBackButtonSettings","handleBack","handleBlockedCategoriesUser","renderBack","index_es","icon","renderComponent","components_LogIn","components_SignUp","components_ForgotPassword","components_Welcome","components_BlockCategories","components_Friends","components_AddFriend","components_FriendRequests","Boolean","window","location","hostname","match","library","add","faArrowLeft","ReactDOM","render","Provider","src_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2734068f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/icon256.8c689181.png\";","import React from \"react\";\r\n\r\nconst FirebaseContext = React.createContext(null);\r\n\r\nexport default FirebaseContext;\r\n","const config = {\n  apiKey: \"AIzaSyDni4UflIR1JzzSmNdyUfOUIWx9x0nzGM8\",\n  authDomain: \"cat-243915.firebaseapp.com\",\n  databaseURL: \"https://cat-243915.firebaseio.com\",\n  projectId: \"youtube-cat-243915\",\n  storageBucket: \"youtube-cat-243915.appspot.com\",\n  messagingSenderId: \"719371077954\",\n  appId: \"1:719371077954:web:12eebc6a33e42ddc\"\n};\n\nexport default config;\n","import FirebaseContext from \"./context\";\r\nimport Firebase from \"./firebase\";\r\n\r\nexport default Firebase;\r\n\r\nexport { FirebaseContext };\r\n","import app from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/database\";\r\nimport \"firebase/firestore\";\r\nimport config from \"./config\";\r\n\r\n//\r\nclass Firebase {\r\n  constructor() {\r\n    app.initializeApp(config);\r\n    this.fieldValue = app.firestore.FieldValue;\r\n    this.auth = app.auth();\r\n    this.db = app.firestore();\r\n    this.googleProvider = new app.auth.GoogleAuthProvider();\r\n  }\r\n\r\n  onAuthUserListener = (next, fallback) =>\r\n    this.auth.onAuthStateChanged(authUser => {\r\n      if (authUser) {\r\n        this.user(authUser.uid)\r\n          .get()\r\n          .then(snapshot => {\r\n            const dbUser = snapshot.data();\r\n\r\n            // default empty roles\r\n            if (!dbUser.roles) {\r\n              dbUser.roles = {};\r\n            }\r\n\r\n            // merge auth and db user\r\n            authUser = {\r\n              uid: authUser.uid,\r\n              email: authUser.email,\r\n              username: dbUser.username,\r\n              emailVerified: authUser.emailVerified,\r\n              providerData: authUser.providerData,\r\n              ...dbUser\r\n            };\r\n\r\n            next(authUser);\r\n          });\r\n      } else {\r\n        fallback();\r\n      }\r\n    });\r\n\r\n  //   Authentication\r\n  doCreateUserWithEmailAndPassword = (email, password) =>\r\n    this.auth.createUserWithEmailAndPassword(email, password);\r\n\r\n  doSignInWithEmailAndPassword = (email, password) =>\r\n    this.auth.signInWithEmailAndPassword(email, password);\r\n\r\n  doSignInWithGoogle = () => this.auth.signInWithPopup(this.googleProvider);\r\n\r\n  doSignOut = () => this.auth.signOut();\r\n\r\n  doPasswordReset = email => this.auth.sendPasswordResetEmail(email);\r\n\r\n  doPasswordUpdate = password => this.auth.currentUser.updatePassword(password);\r\n\r\n  doSendEmailVerification = () => this.auth.currentUser.sendEmailVerification();\r\n\r\n  user = uid => this.db.doc(`users/${uid}`);\r\n\r\n  users = () => this.db.collection(\"users\");\r\n}\r\n\r\nexport default Firebase;\r\n","import React, { Component } from \"react\";\r\nimport { Input, Button } from \"reactstrap\";\r\nimport { FirebaseContext } from \"./firebase\";\r\nimport catIcon from \"../icons/icon256.png\";\r\nimport \"../css/styles23.css\";\r\n\r\nconst INITIAL_STATE = {\r\n  username: \"\",\r\n  email: \"\",\r\n  password: \"\",\r\n  retypePassword: \"\",\r\n  error: null\r\n};\r\n\r\nclass SignUp extends Component {\r\n  state = {\r\n    ...INITIAL_STATE\r\n  };\r\n\r\n  handleOnChange = event => {\r\n    this.setState(\r\n      this.setState({\r\n        [event.target.name]: event.target.value\r\n      })\r\n    );\r\n  };\r\n\r\n  onSubmit = (firebase, event) => {\r\n    console.log(firebase);\r\n    const { email, password, username } = this.state;\r\n\r\n    firebase.firebase\r\n      .doCreateUserWithEmailAndPassword(email, password)\r\n      .then(authUser => {\r\n        return firebase.firebase.user(authUser.user.uid).set(\r\n          {\r\n            username,\r\n            email\r\n          },\r\n          { merge: true }\r\n        );\r\n      })\r\n      .then(() => {\r\n        return firebase.firebase.doSendEmailVerification();\r\n      })\r\n      .then(authUser => {\r\n        this.setState({ ...INITIAL_STATE });\r\n        this.setState({\r\n          error: {\r\n            message: \"An email verification has been sent to you!\"\r\n          }\r\n        });\r\n        // this.props.changePage(\"LogIn\");\r\n      })\r\n      .catch(error => {\r\n        this.setState({ error });\r\n      });\r\n\r\n    event.preventDefault();\r\n  };\r\n\r\n  render() {\r\n    const { username, email, password, retypePassword, error } = this.state;\r\n    const isInvalid =\r\n      password === \"\" || password !== retypePassword || username === \"\";\r\n\r\n    return (\r\n      <FirebaseContext.Consumer>\r\n        {firebase => (\r\n          <div className=\"container\">\r\n            <div className=\"logoContainer\">\r\n              <img src={catIcon} className=\"logoIcon\" />\r\n              <h1 className=\"logoText\">\r\n                YouTube <span className=\"logoText__cat\">Cat</span>\r\n              </h1>\r\n            </div>\r\n            <Input\r\n              placeholder=\"Username\"\r\n              name=\"username\"\r\n              onChange={this.handleOnChange}\r\n              value={username}\r\n              className=\"input-text text\"\r\n            />\r\n            <Input\r\n              placeholder=\"Email\"\r\n              name=\"email\"\r\n              onChange={this.handleOnChange}\r\n              value={email}\r\n              className=\"input-text text\"\r\n            />\r\n            <Input\r\n              placeholder=\"Password\"\r\n              name=\"password\"\r\n              type=\"password\"\r\n              onChange={this.handleOnChange}\r\n              value={password}\r\n              className=\"input-text text\"\r\n            />\r\n            <Input\r\n              placeholder=\"Retype Password\"\r\n              name=\"retypePassword\"\r\n              type=\"password\"\r\n              onChange={this.handleOnChange}\r\n              value={retypePassword}\r\n              className=\"input-text text\"\r\n            />\r\n            <div className=\"button-wrapper\">\r\n              <Button\r\n                className=\"input-btn\"\r\n                disabled={isInvalid}\r\n                color=\"primary\"\r\n                type=\"submit\"\r\n                onClick={event => this.onSubmit({ firebase }, event)}\r\n              >\r\n                SIGN UP\r\n              </Button>{\" \"}\r\n            </div>\r\n            <br />\r\n            {(error && <p className=\"error text\">{error.message}</p> &&\r\n              error.message ===\r\n                \"An email verification has been sent to you!\" && (\r\n                <p className=\"verify text\">\r\n                  A verification email has been sent to you. <br />\r\n                  Please verify your email before{\" \"}\r\n                  <span\r\n                    className=\"linking text\"\r\n                    onClick={() => this.props.changePage(\"LogIn\")}\r\n                  >\r\n                    signing in\r\n                  </span>\r\n                </p>\r\n              )) ||\r\n              (error && error.message)}\r\n            {((error &&\r\n              error.message !==\r\n                \"An email verification has been sent to you!\") ||\r\n              !error) && (\r\n              <div className=\"bottom-text text\">\r\n                <p className=\"question text\">\r\n                  Already have an account? <br />\r\n                  <span\r\n                    className=\"linking text\"\r\n                    onClick={() => this.props.changePage(\"LogIn\")}\r\n                  >\r\n                    Sign in!\r\n                  </span>\r\n                </p>\r\n              </div>\r\n            )}\r\n          </div>\r\n        )}\r\n      </FirebaseContext.Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SignUp;\r\n","import React, { Component } from \"react\";\r\nimport { Input, Button } from \"reactstrap\";\r\nimport { FirebaseContext } from \"./firebase\";\r\nimport \"../css/style145.css\"\r\nimport catIcon from \"../icons/icon256.png\";\r\n\r\nconst INITIAL_STATE = {\r\n  email: \"\",\r\n  password: \"\",\r\n  error: null\r\n};\r\n\r\nclass LogIn extends Component {\r\n  state = {\r\n    ...INITIAL_STATE\r\n  };\r\n\r\n  handleOnChange = event => {\r\n    this.setState(\r\n      this.setState({\r\n        [event.target.name]: event.target.value\r\n      })\r\n    );\r\n  };\r\n\r\n  onSubmit = (firebase, event) => {\r\n    console.log(firebase);\r\n    const { email, password } = this.state;\r\n    firebase.firebase\r\n      .doSignInWithEmailAndPassword(email, password)\r\n      .then(authUser => {\r\n        console.log(\"logged in\");\r\n        this.setState({ ...INITIAL_STATE });\r\n\r\n        firebase.firebase.auth\r\n          .onAuthStateChanged(authUser => {\r\n            console.log(\"going to welcome\");\r\n            if (authUser !== null && authUser.emailVerified) {\r\n              this.props.changeAuth(authUser);\r\n              this.props.changePage(\"Welcome\");\r\n            } else if (authUser !== null && !authUser.emailVerified) {\r\n              this.setState({\r\n                error: { message: \"Please authenticate your email first!\" }\r\n              });\r\n            }\r\n          })\r\n          .catch(error => {\r\n            console.log(\"inner errors: \", error);\r\n          });\r\n      })\r\n      .catch(error => {\r\n        this.setState({ error });\r\n        console.log(\"errors: \", this.state.error);\r\n      });\r\n\r\n    event.preventDefault();\r\n  };\r\n\r\n  render() {\r\n    const { email, password, error } = this.state;\r\n    const isInvalid = password === \"\" || email === \"\";\r\n\r\n    return (\r\n      <FirebaseContext.Consumer>\r\n        {firebase => (\r\n          <div className=\"container\">\r\n            <div className=\"BigLogoContainer\">\r\n            <img className=\"catIcon\" src={catIcon} />\r\n            <h1 className=\"ytpcat\">YouTube <span className=\"cat\">Cat</span></h1>\r\n            </div>\r\n            <div className=\"input-wrapper\">\r\n            <Input\r\n              className=\"input-text text\"\r\n              placeholder=\"Email\"\r\n              name=\"email\"\r\n              onChange={this.handleOnChange}\r\n              value={email}\r\n            />\r\n            <Input\r\n              className=\"input-text text\"\r\n              placeholder=\"Password\"\r\n              name=\"password\"\r\n              type=\"password\"\r\n              onChange={this.handleOnChange}\r\n              value={password}\r\n            />\r\n            </div>\r\n            <div className=\"button-wrapper\">\r\n            <Button\r\n              className=\"input-btn text\"\r\n              disabled={isInvalid}\r\n              type=\"submit\"\r\n              onClick={event => this.onSubmit({ firebase }, event)}\r\n            >\r\n              SIGN IN\r\n            </Button>\r\n            </div>\r\n            {error && <p className=\"error text\">{error.message}</p>}\r\n            <div className=\"bottom-text text\">\r\n            <p className=\"question text\">New to YouTube Cat? \r\n            <span\r\n              className=\"linking text\"\r\n              onClick={() => this.props.changePage(\"SignUp\")}\r\n              > Sign Up!\r\n            </span>\r\n            </p>\r\n            <p className=\"question text\">Forgot password?\r\n            <span\r\n              className=\"linking text\"\r\n              onClick={() => this.props.changePage(\"ForgotPassword\")}\r\n              > Reset\r\n            </span>\r\n            </p>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </FirebaseContext.Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LogIn;\r\n","/*global chrome*/\r\nimport React, { Component } from \"react\";\r\nimport Spinner from \"react-bootstrap/Spinner\";\r\nimport \"../css/styles910.css\";\r\nimport catIcon from \"../icons/icon256.png\";\r\nimport { Button } from \"reactstrap\";\r\n\r\nclass BlockCategories extends Component {\r\n  state = {\r\n    selectAllChecked: true,\r\n    blockedCategories: null,\r\n    userId: null,\r\n    isLoading: true,\r\n    message: \"\"\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const userId =\r\n      this.props.user.id === undefined\r\n        ? this.props.user.uid\r\n        : this.props.user.id;\r\n\r\n    console.log(\"user for blocking: \", userId);\r\n    console.log(\"user\", this.props.user);\r\n    this.props.buttonSetting(\r\n      this.props.user.id === undefined ? \"myself\" : \"friend\"\r\n    );\r\n    this.setState({\r\n      userId\r\n    });\r\n    const blockedCategories = await this.props.firebase\r\n      .user(userId)\r\n      .onSnapshot(snapshot => {\r\n        this.setState({ blockedCategories: snapshot.data() }, () => {\r\n          const { blockedCategories } = this.state;\r\n\r\n          if (null !== blockedCategories && undefined !== blockedCategories) {\r\n            if (undefined !== blockedCategories.blockedCategories) {\r\n              const elements = document.getElementsByClassName(\"enableKey\");\r\n              const getCategories = blockedCategories.blockedCategories;\r\n              console.log(\r\n                \"blocked cats: \",\r\n                blockedCategories.blockedCategories\r\n              );\r\n\r\n              for (let i = 0; i < getCategories.length; i++) {\r\n                console.log(\"element:\", getCategories[i]);\r\n                console.log(\"element nesting: \", elements);\r\n                elements[getCategories[i]].checked = true;\r\n              }\r\n            }\r\n          }\r\n          this.setState({\r\n            isLoading: false\r\n          });\r\n        });\r\n      });\r\n  }\r\n\r\n  handleSavePreferences = firebase => {\r\n    const elements = document.getElementsByClassName(\"enableKey\");\r\n    let checkedItems = [];\r\n    const catArray = [];\r\n    for (let i = 0; i < elements.length; i++) {\r\n      if (elements[i].checked) {\r\n        checkedItems.push(elements[i].value);\r\n        catArray.push(elements[i].name);\r\n      }\r\n    }\r\n\r\n    if (this.props.user.id === undefined) {\r\n      chrome.tabs.query(\r\n        {\r\n          active: true,\r\n          currentWindow: true\r\n        },\r\n        function(tabs) {\r\n          chrome.tabs.sendMessage(tabs[0].id, {\r\n            todo: \"changePreferences\",\r\n            categories: catArray\r\n          });\r\n          console.log(\"sending message about cats\");\r\n        }\r\n      );\r\n    }\r\n\r\n    if (this.props.user.id === undefined) {\r\n      //save data in local storage about self\r\n      console.log(\"setting local storage\");\r\n      localStorage.setItem(\"blockedCategories\", JSON.stringify(checkedItems));\r\n    }\r\n\r\n    firebase.user(this.state.userId).set(\r\n      {\r\n        blockedCategories: checkedItems\r\n      },\r\n      { merge: true }\r\n    );\r\n\r\n    this.setState({ message: \"Blocking has begun! Meow\" });\r\n\r\n    console.log(checkedItems);\r\n  };\r\n\r\n  handleSelectAll = () => {\r\n    this.setState({\r\n      selectAllChecked: !this.state.selectAllChecked\r\n    });\r\n\r\n    if (this.state.selectAllChecked) {\r\n      const elements = document.getElementsByClassName(\"enableKey\");\r\n      for (let i = 0; i < elements.length; i++) {\r\n        elements[i].checked = true;\r\n      }\r\n    } else {\r\n      const elements = document.getElementsByClassName(\"enableKey\");\r\n      for (let i = 0; i < elements.length; i++) {\r\n        elements[i].checked = false;\r\n      }\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        {this.state.isLoading ? (\r\n          <div className=\"block_cat_spinner\">\r\n            <Spinner\r\n              animation=\"border\"\r\n              size=\"lg\"\r\n              variant=\"danger\"\r\n              role=\"status\"\r\n            />\r\n          </div>\r\n        ) : (\r\n          <div />\r\n        )}\r\n        <div className=\"container\">\r\n          <div className=\"logoContainer\">\r\n            <img src={catIcon} className=\"logoIcon\" />\r\n            <h1 className=\"logoText\">\r\n              Meow,{\" \"}\r\n              <span className=\"logoText__cat\">{this.props.username}!</span>\r\n            </h1>\r\n          </div>\r\n          <div className=\"bc__toptext\">\r\n            Blocking for{\" \"}\r\n            <span className=\"bc__toptext--red\">\r\n              {this.props.user.id === undefined\r\n                ? \"myself\"\r\n                : this.props.user.username}\r\n              :\r\n            </span>\r\n          </div>\r\n          <br />\r\n\r\n          <div className=\"row\">\r\n            <div className=\"checkbox-group\">\r\n              <ul className=\"bc__blockedcategories\">\r\n                <li>\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    value=\"-1\"\r\n                    id=\"selectAll\"\r\n                    className=\"selectAll\"\r\n                    onClick={this.handleSelectAll}\r\n                  />\r\n                  Select all\r\n                </li>\r\n                <br />\r\n                <div className=\"scroll\">\r\n                  <li className=\"list_item\">\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      value=\"0\"\r\n                      name=\"Auto & Vehicles\"\r\n                      className=\"enableKey\"\r\n                    />\r\n                    Auto & Vehicles\r\n                  </li>\r\n                  <li className=\"list_item\">\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      value=\"1\"\r\n                      name=\"Beauty & Fashion\"\r\n                      className=\"enableKey\"\r\n                    />\r\n                    Beauty & Fashion\r\n                  </li>\r\n                  <li className=\"list_item\">\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      value=\"2\"\r\n                      name=\"Comedy\"\r\n                      className=\"enableKey\"\r\n                    />\r\n                    Comedy\r\n                  </li>\r\n                  <li className=\"list_item\">\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      value=\"3\"\r\n                      name=\"Education\"\r\n                      className=\"enableKey\"\r\n                    />\r\n                    Education\r\n                  </li>\r\n                  <li className=\"list_item\">\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      value=\"4\"\r\n                      name=\"Entertainment\"\r\n                      className=\"enableKey\"\r\n                    />\r\n                    Entertainment\r\n                  </li>\r\n                  <li className=\"list_item\">\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      value=\"5\"\r\n                      name=\"Family Entertainment\"\r\n                      className=\"enableKey\"\r\n                    />\r\n                    Family Entertainment\r\n                  </li>\r\n                  <li className=\"list_item\">\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      value=\"6\"\r\n                      name=\"Film & Animation\"\r\n                      className=\"enableKey\"\r\n                    />\r\n                    Film & Animation\r\n                  </li>\r\n                  <li className=\"list_item\">\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      value=\"7\"\r\n                      name=\"Food\"\r\n                      className=\"enableKey\"\r\n                    />\r\n                    Food\r\n                  </li>\r\n                  <li className=\"list_item\">\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      value=\"8\"\r\n                      name=\"Gaming\"\r\n                      className=\"enableKey\"\r\n                    />\r\n                    Gaming\r\n                  </li>\r\n                  <li className=\"list_item\">\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      value=\"9\"\r\n                      name=\"Howto & Style\"\r\n                      className=\"enableKey\"\r\n                    />\r\n                    Howto & Style\r\n                  </li>\r\n                  <li className=\"list_item\">\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      value=\"10\"\r\n                      name=\"Music\"\r\n                      className=\"enableKey\"\r\n                    />\r\n                    Music\r\n                  </li>\r\n                  <li className=\"list_item\">\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      value=\"11\"\r\n                      name=\"News & Politics\"\r\n                      className=\"enableKey\"\r\n                    />\r\n                    News & Politics\r\n                  </li>\r\n                  <li className=\"list_item\">\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      value=\"12\"\r\n                      name=\"Nonprofits & Activism\"\r\n                      className=\"enableKey\"\r\n                    />\r\n                    Nonprofits & Activism\r\n                  </li>\r\n                  <li className=\"list_item\">\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      value=\"13\"\r\n                      name=\"People & Blogs\"\r\n                      className=\"enableKey\"\r\n                    />\r\n                    People & Blogs\r\n                  </li>\r\n                  <li className=\"list_item\">\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      value=\"14\"\r\n                      name=\"Pets & Animals\"\r\n                      className=\"enableKey\"\r\n                    />\r\n                    Pets & Animals\r\n                  </li>\r\n                  <li className=\"list_item\">\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      value=\"15\"\r\n                      name=\"Science & Technology\"\r\n                      className=\"enableKey\"\r\n                    />\r\n                    Science & Technology\r\n                  </li>\r\n                  <li className=\"list_item\">\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      value=\"16\"\r\n                      name=\"Sports\"\r\n                      className=\"enableKey\"\r\n                    />\r\n                    Sports\r\n                  </li>\r\n                  <li className=\"list_item\">\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      value=\"17\"\r\n                      name=\"Travel & Events\"\r\n                      className=\"enableKey\"\r\n                    />\r\n                    Travel & Events\r\n                  </li>\r\n                </div>\r\n              </ul>\r\n              <div className=\"blockingMessage\">{this.state.message}</div>\r\n              <div className=\"buttonwrapper\">\r\n                <Button\r\n                  type=\"block\"\r\n                  color=\"primary\"\r\n                  id=\"savePreferences\"\r\n                  className=\"input-btn-block\"\r\n                  onClick={() =>\r\n                    this.handleSavePreferences(this.props.firebase)\r\n                  }\r\n                >\r\n                  BEGIN BLOCK!\r\n                </Button>{\" \"}\r\n                <br />\r\n                <br />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default BlockCategories;\r\n","import React, { Component } from \"react\";\r\nimport { Input, Button } from \"reactstrap\";\r\nimport { FirebaseContext } from \"./firebase\";\r\nimport \"../css/style145.css\"\r\nimport catIcon from \"../icons/icon256.png\";\r\n\r\nconst INITIAL_STATE = {\r\n  email: \"\",\r\n  error: null\r\n};\r\n\r\nclass ForgotPassword extends Component {\r\n  state = {\r\n    ...INITIAL_STATE,\r\n    resetEmailSent: false\r\n  };\r\n\r\n  handleOnChange = event => {\r\n    this.setState(\r\n      this.setState({\r\n        [event.target.name]: event.target.value\r\n      })\r\n    );\r\n  };\r\n\r\n  onSubmit = (firebase, event) => {\r\n    console.log(firebase);\r\n    const { email } = this.state;\r\n    firebase.firebase\r\n      .doPasswordReset(email)\r\n      .then(authUser => {\r\n        console.log(\"reset email sent\");\r\n        this.setState({ ...INITIAL_STATE, resetEmailSent: true });\r\n      })\r\n      .catch(error => {\r\n        this.setState({ error });\r\n      });\r\n\r\n    event.preventDefault();\r\n  };\r\n\r\n  render() {\r\n    const { email, resetEmailSent, error } = this.state;\r\n    const isInvalid =\r\n      //   email.match(/^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2,})$/i) ||\r\n      email === \"\";\r\n\r\n    return (\r\n      <FirebaseContext.Consumer>\r\n        {firebase => (\r\n          <div className=\"container\">\r\n            <img className=\"catIcon\" src={catIcon} />\r\n            <h1 className=\"ytpcat\">YouTube <span className=\"cat\">Cat</span></h1>\r\n            \r\n            <div className=\"inputWrapper\">\r\n            <Input\r\n              placeholder=\"Email\"\r\n              className=\"input-text text\"\r\n              name=\"email\"\r\n              onChange={this.handleOnChange}\r\n              value={email}\r\n            />\r\n            </div>\r\n\r\n            <div className=\"button-wrapper\">\r\n            <Button\r\n              className=\"input-btn text\"\r\n              disabled={isInvalid}\r\n              type=\"submit\"\r\n              onClick={event => this.onSubmit({ firebase }, event)}\r\n            >\r\n              RESET PASSWORD\r\n            </Button>\r\n            </div>\r\n            {error && <p className=\"error text\">{error.message}</p>}\r\n            {resetEmailSent && (\r\n              <div>\r\n                <p className=\"verify text\">{\"An email has been sent to reset your password\"}</p>\r\n              </div>\r\n            )}\r\n                        <div className=\"bottom-text text\">\r\n            <p className=\"question text\">Remembered your password? \r\n            <span\r\n              className=\"linking text\"\r\n              onClick={() => this.props.changePage(\"LogIn\")}\r\n              > Sign In!\r\n            </span>\r\n            </p>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </FirebaseContext.Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ForgotPassword;\r\n","/*global chrome*/\r\nimport React, { Component } from \"react\";\r\nimport { Button, Input } from \"reactstrap\";\r\nimport { FirebaseContext } from \"./firebase\";\r\nimport Spinner from \"react-bootstrap/Spinner\";\r\nimport catIcon from \"../icons/icon256.png\";\r\nimport \"../css/styles5.css\";\r\n\r\nclass Welcome extends Component {\r\n  state = { purpose: \"\", username: \"\", isLoading: true, savedPurpose: null };\r\n\r\n  handleSignOut = firebase => {\r\n    firebase.doSignOut().then(signout => {\r\n      console.log(\"signout\");\r\n      firebase.auth.onAuthStateChanged(authUser => {\r\n        this.props.changePage(\"LogIn\");\r\n        this.props.changeAuth(\"null\");\r\n      });\r\n    });\r\n  };\r\n\r\n  handlePurpose = e => {\r\n    console.log(e.target.value);\r\n    this.setState({\r\n      purpose: e.target.value\r\n    });\r\n  };\r\n\r\n  handlePurposeSubmission = firebase => {\r\n    chrome.tabs.query(\r\n      {\r\n        active: true,\r\n        currentWindow: true\r\n      },\r\n      function(tabs) {\r\n        chrome.tabs.sendMessage(tabs[0].id, {\r\n          purpose: this.state.purpose,\r\n          todo: \"receivePurpose\"\r\n        });\r\n      }\r\n    );\r\n\r\n    firebase.user(this.props.authUser.uid).set(\r\n      {\r\n        purpose: this.state.purpose\r\n      },\r\n      {\r\n        merge: true\r\n      }\r\n    );\r\n\r\n    this.setState({\r\n      savedPurpose: this.state.purpose,\r\n      purpose: \"\"\r\n    });\r\n  };\r\n\r\n  fetchUserDetails = firebase => {\r\n    if (this.state.username === \"\" && this.props.authUser !== null) {\r\n      firebase.user(this.props.authUser.uid).onSnapshot(snapshot => {\r\n        this.setState({\r\n          username: snapshot.data().username,\r\n          isLoading: false,\r\n          savedPurpose: snapshot.data().purpose\r\n        });\r\n        this.props.setUsername(snapshot.data().username);\r\n      });\r\n    }\r\n  };\r\n\r\n  componentDidMount() {\r\n    console.log(\"authuser: \", this.props.authUser);\r\n    this.props.blockedCategoriesUser(this.props.authUser);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <FirebaseContext.Consumer>\r\n        {firebase => {\r\n          this.fetchUserDetails(firebase);\r\n          return this.state.isLoading ? (\r\n            <div className=\"spinner-wrapper\">\r\n              <Spinner\r\n                size=\"xl\"\r\n                animation=\"border\"\r\n                variant=\"danger\"\r\n                role=\"status\"\r\n                style={{ width: \"4rem\", height: \"4rem\" }}\r\n              />\r\n            </div>\r\n          ) : this.props.authUser === null ||\r\n            !this.props.authUser.emailVerified ? (\r\n            <div>\r\n              <p>Please check your email and verify it meow!</p>\r\n              <Button\r\n                className=\"signout\"\r\n                onClick={() => this.handleSignOut(firebase)}\r\n              >\r\n                Sign Out\r\n              </Button>\r\n            </div>\r\n          ) : (\r\n            <div>\r\n              <p className=\"toptext\">\r\n                <div className=\"logoContainer\">\r\n                  <img src={catIcon} className=\"logoIcon\" />\r\n                  <h1 className=\"logoText\">\r\n                    Meow,{\" \"}\r\n                    <span className=\"logoText__cat\">\r\n                      {this.state.username}!\r\n                    </span>\r\n                  </h1>\r\n                </div>\r\n                <span className=\"block_vids_for\">Block vids for?</span>\r\n              </p>\r\n              <br />\r\n              <Button\r\n                className=\"myself_btn\"\r\n                color=\"primary\"\r\n                onClick={() => this.props.changePage(\"BlockedCategories\")}\r\n                type=\"myself\"\r\n              >\r\n                <span className=\"btnText\">ME</span>\r\n              </Button>\r\n              <Button\r\n                className=\"friends_btn\"\r\n                color=\"primary\"\r\n                onClick={() => this.props.changePage(\"Friends\")}\r\n                type=\"friends\"\r\n              >\r\n                <span className=\"btnText\">FRIENDS</span>\r\n              </Button>\r\n              <br />\r\n              <div className=\"purpose\">\r\n                <span className=\"purposeQuestion\">\r\n                  What is your purpose today?\r\n                </span>\r\n                <Input\r\n                  type=\"purpose\"\r\n                  placeholder={\r\n                    this.state.savedPurpose === undefined ||\r\n                    this.state.savedPurpose === null ||\r\n                    this.state.savedPurpose === \"\"\r\n                      ? \"Purpose\"\r\n                      : this.state.savedPurpose\r\n                  }\r\n                  onChange={e => this.handlePurpose(e)}\r\n                />\r\n              </div>\r\n\r\n              <br />\r\n              <div className=\"button-wrapper\">\r\n              <Button\r\n                className=\"submitPurpose\"\r\n                onClick={() => this.handlePurposeSubmission(firebase)}\r\n              >\r\n                <span className=\"btnText\"> Submit </span>\r\n              </Button>\r\n              <br />\r\n              <Button\r\n                className=\"friends_btn\"\r\n                onClick={() => this.handleSignOut(firebase)}\r\n              >\r\n                <span className=\"btnText\"> SIGN OUT </span>\r\n              </Button>\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n      </FirebaseContext.Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Welcome;\r\n","import React, { Component } from \"react\";\r\nimport { Input, Button, Form, FormGroup } from \"reactstrap\";\r\nimport \"../css/style145.css\";\r\nimport catIcon from \"../icons/icon256.png\";\r\n\r\nclass AddFriend extends Component {\r\n  state = {\r\n    username: \"\",\r\n    friendsList: [],\r\n    friendEmail: \"\",\r\n    message: \"\",\r\n    isLoading: true,\r\n    friendId: \"\",\r\n    friendPendingRequests: [],\r\n    requestsSent: [],\r\n    requestsReceived: []\r\n  };\r\n\r\n  componentDidMount() {\r\n    console.log(this.props.authUser);\r\n\r\n    this.props.firebase.user(this.props.authUser.uid).onSnapshot(snapshot => {\r\n      this.setState(\r\n        {\r\n          username: snapshot.data().username,\r\n          friendsList:\r\n            snapshot.data().friends === undefined\r\n              ? []\r\n              : snapshot.data().friends,\r\n          isLoading: false,\r\n          requestsSent:\r\n            snapshot.data().requests_sent === undefined\r\n              ? []\r\n              : snapshot.data().requests_sent,\r\n          requestsReceived:\r\n            snapshot.data().requests_received === undefined\r\n              ? []\r\n              : snapshot.data().requests_received\r\n        },\r\n        () => console.log(\"friends: \", this.state.friendsList.length === 0)\r\n      );\r\n    });\r\n  }\r\n\r\n  handleAddFriend = firebase => {\r\n    if (this.state.friendEmail === this.props.authUser.email) {\r\n      this.setState({\r\n        message:\r\n          \"There is no denying that you are a friend of yourself! Broaden your horizons!\",\r\n        friendEmail: \"\"\r\n      });\r\n    } else {\r\n      const alreadyFriend = this.state.friendsList.filter(friend => {\r\n        // console.log(friend.email, \"     \", this.state.friendEmail);\r\n        return friend.email === this.state.friendEmail;\r\n      });\r\n\r\n      const alreadyRequestReceived = this.state.requestsReceived.filter(\r\n        request => {\r\n          // console.log(request.email, \"     \", this.state.friendEmail);\r\n          return request.email === this.state.friendEmail;\r\n        }\r\n      );\r\n\r\n      console.log(this.state.requestsSent);\r\n      const alreadyRequestSent = this.state.requestsSent.filter(request => {\r\n        // console.log(request.email, \"     \", this.state.friendEmail);\r\n        return request.email === this.state.friendEmail;\r\n      });\r\n      if (alreadyFriend.length > 0) {\r\n        this.setState({\r\n          message:\r\n            \"This user is already your friend! Do you doubt your friendship meow?\",\r\n          friendEmail: \"\"\r\n        });\r\n      } else if (alreadyRequestReceived.length > 0) {\r\n        this.setState({\r\n          message:\r\n            \"The user has already sent you a request! Go ahead and accept it!\",\r\n          friendEmail: \"\"\r\n        });\r\n      } else if (alreadyRequestSent.length > 0) {\r\n        this.setState({\r\n          message:\r\n            \"Don't be so desperate meow. Give the user some time to accept your request!\",\r\n          friendEmail: \"\"\r\n        });\r\n      } else {\r\n        firebase.db\r\n          .collection(\"users\")\r\n          .where(\"email\", \"==\", this.state.friendEmail)\r\n          .get()\r\n          .then(querySnapshot => {\r\n            if (querySnapshot.docs.length < 1) {\r\n              this.setState({\r\n                message:\r\n                  \"CATastrophe! This user does not exist. Please check the email and try again.\",\r\n                friendEmail: \"\"\r\n              });\r\n            } else {\r\n              querySnapshot.forEach(doc => {\r\n                if (\r\n                  this.state.requestsSent.filter(\r\n                    friend => friend.uid === doc.id\r\n                  ).length === 0\r\n                ) {\r\n                  console.log(\"if 1: \", this.props.myself);\r\n                  this.setState(\r\n                    {\r\n                      requestsSent: [\r\n                        ...this.state.requestsSent,\r\n                        {\r\n                          email: this.state.friendEmail,\r\n                          username: doc.data().username,\r\n                          id: doc.id\r\n                        }\r\n                      ],\r\n                      friendId: doc.id\r\n                    },\r\n                    () => {\r\n                      console.log(\"friend id: \", this.state.friendId);\r\n                      firebase.user(this.props.authUser.uid).set(\r\n                        {\r\n                          requests_sent: this.state.requestsSent\r\n                        },\r\n                        { merge: true }\r\n                      );\r\n                      console.log(\r\n                        \"before request sent message: \",\r\n                        this.props.myself\r\n                      );\r\n                      this.setState(\r\n                        {\r\n                          message: \"Request sent.\"\r\n                        },\r\n                        () => {\r\n                          console.log(\"after the message: \", this.props.myself);\r\n                          firebase\r\n                            .user(this.state.friendId)\r\n                            .get()\r\n                            .then(querySnapshot => {\r\n                              console.log(\r\n                                \"query: \",\r\n                                querySnapshot.data().requests_received\r\n                              );\r\n\r\n                              const data =\r\n                                querySnapshot.data().requests_received ===\r\n                                undefined\r\n                                  ? []\r\n                                  : querySnapshot.data().requests_received;\r\n\r\n                              console.log(\"data: \", data);\r\n\r\n                              console.log(\r\n                                \"before changing pending requests: \",\r\n                                this.props.myself\r\n                              );\r\n\r\n                              this.setState(\r\n                                {\r\n                                  friendsPendingRequests: data\r\n                                },\r\n                                () => {\r\n                                  console.log(\r\n                                    \"existing invitations: \",\r\n                                    this.state.friendPendingRequests\r\n                                  );\r\n                                  firebase.user(this.state.friendId).set(\r\n                                    {\r\n                                      requests_received: [\r\n                                        ...data,\r\n                                        {\r\n                                          id: this.props.authUser.uid,\r\n                                          email: this.props.authUser.email,\r\n                                          username: this.state.username\r\n                                        }\r\n                                      ]\r\n                                    },\r\n                                    { merge: true }\r\n                                  );\r\n                                }\r\n                              );\r\n                            });\r\n                        }\r\n                      );\r\n                    }\r\n                  );\r\n                } else {\r\n                  this.setState({\r\n                    message:\r\n                      \"Request is already sent. Please be patient and stay pawsitive.\"\r\n                  });\r\n                }\r\n                this.setState({\r\n                  friendEmail: \"\"\r\n                });\r\n              });\r\n            }\r\n          });\r\n      }\r\n    }\r\n  };\r\n\r\n  handleFriendEmail = e => {\r\n    this.setState({\r\n      friendEmail: e.target.value\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"logoContainer\">\r\n          <img src={catIcon} className=\"logoIcon\" />\r\n          <h1 className=\"logoText\">\r\n            Meow, <span className=\"logoText__cat\">{this.state.username}!</span>\r\n          </h1>\r\n        </div>\r\n        <h4 className=\"oswald\">Add a friend!</h4>\r\n        <Form>\r\n          <FormGroup>\r\n            <Input\r\n              className=\"input-text\"\r\n              placeholder=\"Email\"\r\n              type=\"email\"\r\n              onChange={e => this.handleFriendEmail(e)}\r\n              value={this.state.friendEmail}\r\n            />\r\n            <div className=\"button-wrapper\">\r\n              <Button\r\n                className=\"input-btn\"\r\n                onClick={() => this.handleAddFriend(this.props.firebase)}\r\n              >\r\n                ADD\r\n              </Button>\r\n            </div>\r\n            <div>\r\n              <p className=\"error\">{this.state.message}</p>\r\n            </div>\r\n          </FormGroup>\r\n        </Form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddFriend;\r\n","import React, { Component } from \"react\";\r\nimport { Input, Button, Form, FormGroup } from \"reactstrap\";\r\nimport Spinner from \"react-bootstrap/Spinner\";\r\nimport \"../css/style67.css\";\r\nimport catIcon from \"../icons/icon256.png\";\r\nimport Close from \"@material-ui/icons/Close\";\r\n\r\nclass Friends extends Component {\r\n  state = {\r\n    username: \"\",\r\n    friendsList: [],\r\n    friendEmail: \"\",\r\n    message: \"\",\r\n    isLoading: true,\r\n    friendId: \"\",\r\n    friendPendingRequests: [],\r\n    requestsSent: [],\r\n    requestsReceived: []\r\n  };\r\n\r\n  componentDidMount() {\r\n    console.log(this.props.authUser);\r\n\r\n    this.props.firebase.user(this.props.authUser.uid).onSnapshot(snapshot => {\r\n      this.setState(\r\n        {\r\n          username: snapshot.data().username,\r\n          friendsList:\r\n            snapshot.data().friends === undefined\r\n              ? []\r\n              : snapshot.data().friends,\r\n          isLoading: false,\r\n          requestsSent:\r\n            snapshot.data().requests_sent === undefined\r\n              ? []\r\n              : snapshot.data().requests_sent,\r\n          requestsReceived:\r\n            snapshot.data().requests_received === undefined\r\n              ? []\r\n              : snapshot.data().requests_received\r\n        },\r\n        () => console.log(\"friends: \", this.state.friendsList.length === 0)\r\n      );\r\n    });\r\n  }\r\n\r\n  handleRemoveFriend = (foe, firebase) => {\r\n    this.setState(\r\n      {\r\n        friendsList: this.state.friendsList.filter(\r\n          friend => friend.id !== foe.id\r\n        )\r\n      },\r\n      () => {\r\n        firebase.user(this.props.authUser.uid).set(\r\n          {\r\n            friends: this.state.friendsList\r\n          },\r\n          {\r\n            merge: true\r\n          }\r\n        );\r\n      }\r\n    );\r\n\r\n    firebase\r\n      .user(foe.id)\r\n      .get()\r\n      .then(querySnapshot => {\r\n        let foeFriendsList = querySnapshot.data().friends;\r\n\r\n        if (foeFriendsList !== undefined) {\r\n          firebase.user(foe.id).set(\r\n            {\r\n              friends: foeFriendsList.filter(\r\n                friend => friend.id !== this.props.authUser.uid\r\n              )\r\n            },\r\n            {\r\n              merge: true\r\n            }\r\n          );\r\n        }\r\n      });\r\n  };\r\n\r\n  renderFriendsList = firebase => {\r\n    return this.state.isLoading ? (\r\n      <div className=\"spinner-wrapper\">\r\n        <Spinner animation=\"border\" variant=\"danger\" role=\"status\" />\r\n      </div>\r\n    ) : this.state.friendsList !== undefined ? (\r\n      this.state.friendsList.map(friend => (\r\n        <div style={{ display: \"flex\" }}>\r\n          <h6\r\n            className=\"friend oswald\"\r\n            style={{ flex: 1 }}\r\n            onClick={() => this.props.handleHelpFriend(friend)}\r\n          >\r\n            {friend.username}\r\n          </h6>\r\n          <Close\r\n            className=\"icon cancel\"\r\n            color=\"danger\"\r\n            onClick={() => this.handleRemoveFriend(friend, firebase)}\r\n          />\r\n        </div>\r\n      ))\r\n    ) : (\r\n      <div />\r\n    );\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"logoContainer\">\r\n          <img src={catIcon} className=\"logoIcon\" />\r\n          <h1 className=\"logoText\">\r\n            Meow, <span className=\"logoText__cat\">{this.state.username}!</span>\r\n          </h1>\r\n        </div>\r\n        <h3 className=\"title oswald\">FRIENDS</h3>\r\n        {this.state.friendsList !== undefined &&\r\n        this.state.friendsList !== null &&\r\n        this.state.friendsList.length > 0\r\n          ? \"Choose a friend and block their vids!\"\r\n          : \"Add friends! I'm sure you have some!\"}\r\n\r\n        <div className=\"friends-list\">\r\n          {this.renderFriendsList(this.props.firebase)}\r\n        </div>\r\n        <Button\r\n          className=\"input-btn\"\r\n          onClick={() => this.props.changePage(\"AddFriend\")}\r\n        >\r\n          ADD FRIENDS\r\n        </Button>\r\n        <Button\r\n          className=\"input-btn\"\r\n          onClick={() => this.props.changePage(\"FriendRequests\")}\r\n        >\r\n          INVITES\r\n        </Button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Friends;\r\n","import React, { Component } from \"react\";\r\nimport { Button } from \"reactstrap\";\r\nimport \"../css/style67.css\";\r\nimport catIcon from \"../icons/icon256.png\";\r\nimport Check from \"@material-ui/icons/Check\";\r\nimport Close from \"@material-ui/icons/Close\";\r\n\r\nclass FriendRequests extends Component {\r\n  state = {\r\n    username: \"\",\r\n    friendsList: [],\r\n    friendEmail: \"\",\r\n    message: \"\",\r\n    isLoading: true,\r\n    friendId: \"\",\r\n    friendPendingRequests: [],\r\n    requestsSent: [],\r\n    requestsReceived: [],\r\n    myself: this.props.myself\r\n  };\r\n\r\n  acceptReceivedRequest = (friend, firebase) => {\r\n    const data = [...this.state.friendsList, friend];\r\n    // add this new friend to the existing list of friends locally and on firestore\r\n    this.setState(\r\n      {\r\n        friendsList: data\r\n      },\r\n      () => {\r\n        console.log(\"friends list: \", this.state.friendsList);\r\n        firebase.user(this.props.authUser.uid).set(\r\n          {\r\n            friends: data\r\n          },\r\n          {\r\n            merge: true\r\n          }\r\n        );\r\n\r\n        //remove this friend from the friends request section locally and on firestore\r\n        this.setState(\r\n          {\r\n            requestsReceived: this.state.requestsReceived.filter(\r\n              request => request.id !== friend.id\r\n            )\r\n          },\r\n          () => {\r\n            firebase.user(this.props.authUser.uid).set(\r\n              {\r\n                requests_received: this.state.requestsReceived\r\n              },\r\n              {\r\n                merge: true\r\n              }\r\n            );\r\n\r\n            //add yourself as a friend in this new friend's firestore\r\n            firebase\r\n              .user(friend.id)\r\n              .get()\r\n              .then(querySnapshot => {\r\n                let fetchRequestsSentData = querySnapshot.data().requests_sent;\r\n                console.log(\"friends: \", firebase.user(friend.id));\r\n\r\n                if (fetchRequestsSentData !== undefined) {\r\n                  const temp =\r\n                    querySnapshot.data().friends === undefined ||\r\n                    querySnapshot.data().friends.length === 0\r\n                      ? [\r\n                          {\r\n                            email: this.props.authUser.email,\r\n                            username: this.state.username,\r\n                            id: this.props.authUser.uid\r\n                          }\r\n                        ]\r\n                      : [\r\n                          { ...querySnapshot.data().friends },\r\n                          {\r\n                            email: this.props.authUser.email,\r\n                            username: this.state.username,\r\n                            id: this.props.authUser.uid\r\n                          }\r\n                        ];\r\n                  firebase.user(friend.id).set(\r\n                    {\r\n                      requests_sent: fetchRequestsSentData.filter(\r\n                        request => request.id !== this.props.authUser.uid\r\n                      ),\r\n                      friends: temp\r\n                    },\r\n                    { merge: true }\r\n                  );\r\n                }\r\n              });\r\n          }\r\n        );\r\n      }\r\n    );\r\n  };\r\n\r\n  rejectReceivedRequest = (request, firebase) => {\r\n    // remove request received locally and on firestore\r\n    this.setState(\r\n      {\r\n        requestsReceived: this.state.requestsReceived.filter(\r\n          friend => friend.id !== request.id\r\n        )\r\n      },\r\n      () => {\r\n        firebase.user(this.props.authUser.uid).set(\r\n          {\r\n            requests_received: this.state.requestsReceived\r\n          },\r\n          {\r\n            merge: true\r\n          }\r\n        );\r\n      }\r\n    );\r\n\r\n    //remove request sent from potential friend's account\r\n    firebase\r\n      .user(request.id)\r\n      .get()\r\n      .then(querySnapshot => {\r\n        let fetchRequestsSentData = querySnapshot.data().requests_sent;\r\n\r\n        if (fetchRequestsSentData !== undefined) {\r\n          firebase.user(request.id).set(\r\n            {\r\n              requests_sent: fetchRequestsSentData.filter(\r\n                friend => friend.id !== this.props.authUser.uid\r\n              )\r\n            },\r\n            { merge: true }\r\n          );\r\n        }\r\n      });\r\n  };\r\n\r\n  renderRequestsReceived = firebase => {\r\n    return this.state.requestsReceived.map(friend => (\r\n      <div>\r\n        <h6>\r\n          {friend.username}\r\n          <span>\r\n            <Close\r\n              className=\"icon cancel\"\r\n              color=\"danger\"\r\n              onClick={() => this.rejectReceivedRequest(friend, firebase)}\r\n            />\r\n            <Check\r\n              className=\"icon accept\"\r\n              color=\"success\"\r\n              onClick={() => this.acceptReceivedRequest(friend, firebase)}\r\n            />\r\n          </span>\r\n        </h6>\r\n      </div>\r\n    ));\r\n  };\r\n\r\n  cancelSentRequest = (request, firebase) => {\r\n    this.setState(\r\n      {\r\n        requestsSent: this.state.requestsSent.filter(\r\n          friend => friend.id !== request.id\r\n        )\r\n      },\r\n      () => {\r\n        firebase.user(this.props.authUser.uid).set(\r\n          {\r\n            requests_sent: this.state.requestsSent\r\n          },\r\n          {\r\n            merge: true\r\n          }\r\n        );\r\n      }\r\n    );\r\n    //remove request sent from potential friend's account\r\n    firebase\r\n      .user(request.id)\r\n      .get()\r\n      .then(querySnapshot => {\r\n        let fetchRequestsreceivedData = querySnapshot.data().requests_received;\r\n\r\n        if (fetchRequestsreceivedData !== undefined) {\r\n          firebase.user(request.id).set(\r\n            {\r\n              requests_received: fetchRequestsreceivedData.filter(\r\n                friend => friend.id !== this.props.authUser.uid\r\n              )\r\n            },\r\n            { merge: true }\r\n          );\r\n        }\r\n      });\r\n  };\r\n\r\n  renderRequestsSent = firebase => {\r\n    return this.state.requestsSent.map(friend => (\r\n      <div>\r\n        <h6>\r\n          {friend.username}\r\n          <span className=\"inline-button\">\r\n            <Close\r\n              className=\"icon cancel\"\r\n              color=\"danger\"\r\n              onClick={() => this.cancelSentRequest(friend, firebase)}\r\n            />\r\n          </span>\r\n        </h6>\r\n      </div>\r\n    ));\r\n  };\r\n\r\n  componentDidMount() {\r\n    console.log(this.props.authUser);\r\n\r\n    this.props.firebase.user(this.props.authUser.uid).onSnapshot(snapshot => {\r\n      this.setState(\r\n        {\r\n          username: snapshot.data().username,\r\n          friendsList:\r\n            snapshot.data().friends === undefined\r\n              ? []\r\n              : snapshot.data().friends,\r\n          isLoading: false,\r\n          requestsSent:\r\n            snapshot.data().requests_sent === undefined\r\n              ? []\r\n              : snapshot.data().requests_sent,\r\n          requestsReceived:\r\n            snapshot.data().requests_received === undefined\r\n              ? []\r\n              : snapshot.data().requests_received\r\n        },\r\n        () => console.log(\"friends: \", this.state.friendsList.length === 0)\r\n      );\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"logoContainer\">\r\n          <img src={catIcon} className=\"logoIcon\" />\r\n          <h1 className=\"logoText\">\r\n            Meow, <span className=\"logoText__cat\">{this.state.myself}!</span>\r\n          </h1>\r\n        </div>\r\n        <h4 className=\"title oswald\">FRIEND INVITATIONS</h4>\r\n        <div className=\"friends-list\">\r\n          {this.state.requestsReceived.length < 1\r\n            ? \"No pending invitations.\"\r\n            : this.renderRequestsReceived(this.props.firebase)}\r\n        </div>\r\n        <h4 className=\"title oswald\">OUTGOING REQUESTS</h4>\r\n        <div className=\"friends-list\">\r\n          {this.state.requestsSent.length < 1\r\n            ? \"No invitations sent.\"\r\n            : this.renderRequestsSent(this.props.firebase)}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FriendRequests;\r\n","/*global chrome*/\r\nimport React, { Component } from \"react\";\r\nimport SignUp from \"./components/SignUp\";\r\nimport LogIn from \"./components/LogIn\";\r\nimport BlockedCategories from \"./components/BlockCategories\";\r\nimport ForgotPassword from \"./components/ForgotPassword\";\r\nimport Welcome from \"./components/Welcome\";\r\nimport AddFriend from \"./components/AddFriend\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { FirebaseContext } from \"./components/firebase\";\r\nimport Friends from \"./components/Friends\";\r\nimport { thisExpression } from \"@babel/types\";\r\nimport FriendRequests from \"./components/FriendRequests\";\r\nimport \"./css/styles.css\";\r\n\r\nclass App extends Component {\r\n  state = {\r\n    page: \"\",\r\n    authUser:\r\n      localStorage.getItem(\"authUser\") !== \"null\"\r\n        ? JSON.parse(localStorage.getItem(\"authUser\"))\r\n        : localStorage.getItem(\"authUser\") !== \"null\",\r\n    blockedCategoriesUser: null,\r\n    backFor: \"myself\",\r\n    username: \"\"\r\n  };\r\n\r\n  handleUsername = name => {\r\n    this.setState({ username: name });\r\n  };\r\n\r\n  handlePages = pageTitle => {\r\n    console.log(\"page title: \", pageTitle);\r\n    this.setState({\r\n      page: pageTitle\r\n    });\r\n  };\r\n\r\n  handleAuthUser = user => {\r\n    this.setState({\r\n      authUser: user\r\n    });\r\n    if (user !== \"null\") {\r\n      localStorage.setItem(\"authUser\", JSON.stringify(user));\r\n    } else {\r\n      localStorage.setItem(\"authUser\", user);\r\n    }\r\n  };\r\n\r\n  handleBackButtonSettings = backFor => {\r\n    this.setState({\r\n      backFor: backFor\r\n    });\r\n  };\r\n\r\n  handleBack = () => {\r\n    if (this.state.page === \"SignUp\" || this.state.page === \"ForgotPassword\") {\r\n      this.handlePages(\"LogIn\");\r\n    } else if (\r\n      (this.state.page === \"BlockedCategories\" &&\r\n        this.state.backFor === \"myself\") ||\r\n      this.state.page === \"Friends\"\r\n    ) {\r\n      this.handlePages(\"Welcome\");\r\n    } else if (\r\n      (this.state.page === \"BlockedCategories\" &&\r\n        this.state.backFor === \"friend\") ||\r\n      this.state.page === \"AddFriend\" ||\r\n      this.state.page === \"FriendRequests\"\r\n    ) {\r\n      this.handlePages(\"Friends\");\r\n    }\r\n  };\r\n\r\n  handleBlockedCategoriesUser = user => {\r\n    this.setState({\r\n      blockedCategoriesUser: user\r\n    });\r\n  };\r\n\r\n  handleHelpFriend = friend => {\r\n    this.setState(\r\n      {\r\n        blockedCategoriesUser: friend\r\n      },\r\n      () => this.handlePages(\"BlockedCategories\")\r\n    );\r\n  };\r\n\r\n  renderBack = () => {\r\n    console.log(this.state.page);\r\n    if (\r\n      this.state.page === \"LogIn\" ||\r\n      this.state.page === \"\" ||\r\n      this.state.page === \"Welcome\"\r\n    ) {\r\n      return <div />;\r\n    } else {\r\n      return (\r\n        <FontAwesomeIcon\r\n          className=\"backButton\"\r\n          icon={[\"fas\", \"arrow-left\"]}\r\n          size=\"lg\"\r\n        />\r\n      );\r\n    }\r\n  };\r\n\r\n  renderComponent = () => {\r\n    switch (this.state.page) {\r\n      case \"LogIn\":\r\n        return (\r\n          <LogIn\r\n            changePage={this.handlePages}\r\n            changeAuth={this.handleAuthUser}\r\n            page={this.state.page}\r\n          />\r\n        );\r\n      case \"SignUp\":\r\n        return <SignUp changePage={this.handlePages} />;\r\n      case \"ForgotPassword\":\r\n        return <ForgotPassword changePage={this.handlePages} />;\r\n      case \"Welcome\":\r\n        return (\r\n          <Welcome\r\n            changePage={this.handlePages}\r\n            changeAuth={this.handleAuthUser}\r\n            authUser={this.state.authUser}\r\n            blockedCategoriesUser={this.handleBlockedCategoriesUser}\r\n            setUsername={this.handleUsername}\r\n          />\r\n        );\r\n      case \"BlockedCategories\":\r\n        return (\r\n          <FirebaseContext.Consumer>\r\n            {firebase => (\r\n              <BlockedCategories\r\n                changePage={this.handlePages}\r\n                user={this.state.blockedCategoriesUser}\r\n                firebase={firebase}\r\n                buttonSetting={this.handleBackButtonSettings}\r\n                username={this.state.username}\r\n              />\r\n            )}\r\n          </FirebaseContext.Consumer>\r\n        );\r\n\r\n      case \"Friends\":\r\n        return (\r\n          <FirebaseContext.Consumer>\r\n            {firebase => (\r\n              <Friends\r\n                changePage={this.handlePages}\r\n                authUser={this.state.authUser}\r\n                firebase={firebase}\r\n                blockedCategoriesUser={this.handleBlockedCategoriesUser}\r\n                handleHelpFriend={this.handleHelpFriend}\r\n                myself={this.state.username}\r\n              />\r\n            )}\r\n          </FirebaseContext.Consumer>\r\n        );\r\n\r\n      case \"AddFriend\":\r\n        return (\r\n          <FirebaseContext.Consumer>\r\n            {firebase => (\r\n              <AddFriend\r\n                changePage={this.handlePages}\r\n                authUser={this.state.authUser}\r\n                firebase={firebase}\r\n                blockedCategoriesUser={this.handleBlockedCategoriesUser}\r\n                myself={this.state.username}\r\n              />\r\n            )}\r\n          </FirebaseContext.Consumer>\r\n        );\r\n\r\n      case \"FriendRequests\":\r\n        return (\r\n          <FirebaseContext.Consumer>\r\n            {firebase => (\r\n              <FriendRequests\r\n                changePage={this.handlePages}\r\n                authUser={this.state.authUser}\r\n                firebase={firebase}\r\n                blockedCategoriesUser={this.handleBlockedCategoriesUser}\r\n                myself={this.state.username}\r\n              />\r\n            )}\r\n          </FirebaseContext.Consumer>\r\n        );\r\n\r\n      default:\r\n        if (\r\n          this.state.authUser !== \"null\" &&\r\n          this.state.authUser !== null &&\r\n          this.state.authUser !== false\r\n        ) {\r\n          return (\r\n            <Welcome\r\n              changePage={this.handlePages}\r\n              changeAuth={this.handleAuthUser}\r\n              authUser={this.state.authUser}\r\n              blockedCategoriesUser={this.handleBlockedCategoriesUser}\r\n              setUsername={this.handleUsername}\r\n            />\r\n          );\r\n        } else {\r\n          return (\r\n            <LogIn\r\n              changePage={this.handlePages}\r\n              changeAuth={this.handleAuthUser}\r\n              page={this.state.page}\r\n            />\r\n          );\r\n        }\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container flexing\">\r\n        <div className=\"flex1\" onClick={this.handleBack}>\r\n          {this.renderBack()}\r\n        </div>\r\n        <div className=\"flex2\">{this.renderComponent()}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n// import \"./styles.css\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport Firebase, { FirebaseContext } from \"./components/firebase\";\r\n\r\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\r\nimport { faArrowLeft } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\n// import {} from \"@fortawesome/free-regular-svg-icons\";\r\n\r\n// import {} from \"@fortawesome/free-brands-svg-icons\";\r\n\r\nlibrary.add(faArrowLeft);\r\n\r\nReactDOM.render(\r\n  <FirebaseContext.Provider value={new Firebase()}>\r\n    <App />\r\n  </FirebaseContext.Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}